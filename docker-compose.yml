version: '3.8'

services:
  # Backend Node.js API
  whitelabel-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD:-password}@postgres:5432/whitelabel_mvp
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key}
      - JWT_EXPIRES_IN=7d
      - EVOLUTION_API_URL=${EVOLUTION_API_URL:-http://evolution-api:8080}
      - EVOLUTION_API_KEY=${EVOLUTION_API_KEY:-your-evolution-key}
      - REDIS_URL=redis://redis:6379
      - FRONTEND_URL=http://localhost:3000
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX_REQUESTS=100
      - LOG_LEVEL=info
    depends_on:
      - postgres
      - redis
    volumes:
      - backend_logs:/app/logs
    networks:
      - whitelabel-network
    restart: unless-stopped

  # Frontend React App
  whitelabel-frontend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - VITE_API_URL=http://localhost:4000
      - VITE_SUPABASE_URL=${SUPABASE_URL}
      - VITE_SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
    depends_on:
      - whitelabel-backend
    networks:
      - whitelabel-network
    restart: unless-stopped

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: whitelabel_mvp
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database-setup.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - whitelabel-network
    restart: unless-stopped

  # Redis para cache e filas
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - whitelabel-network
    restart: unless-stopped

  # Evolution API (WhatsApp)
  evolution-api:
    image: atendai/evolution-api:latest
    ports:
      - "8080:8080"
    environment:
      - DATABASE_ENABLED=true
      - DATABASE_CONNECTION_URI=postgresql://postgres:${POSTGRES_PASSWORD:-password}@postgres:5432/whitelabel_mvp
      - DATABASE_CONNECTION_CLIENT_NAME=evolution_api
      - REDIS_ENABLED=true
      - REDIS_URI=redis://redis:6379
      - REDIS_PREFIX_KEY=evolution_api
      - AUTHENTICATION_API_KEY=${EVOLUTION_API_KEY:-your-evolution-key}
      - AUTHENTICATION_EXPOSE_IN_FETCH_INSTANCES=true
      - WEBHOOK_GLOBAL_ENABLED=true
      - WEBHOOK_GLOBAL_URL=http://whitelabel-backend:4000/api/webhooks/whatsapp
      - WEBHOOK_GLOBAL_WEBHOOK_BY_EVENTS=false
      - CONFIG_SESSION_PHONE_CLIENT=WhiteLabel MVP
      - CONFIG_SESSION_PHONE_NAME=WhiteLabel
    depends_on:
      - postgres
      - redis
    volumes:
      - evolution_instances:/evolution/instances
    networks:
      - whitelabel-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  backend_logs:
  evolution_instances:

networks:
  whitelabel-network:
    driver: bridge