# ========================================
# TEMPLATE DE VARIÁVEIS DE AMBIENTE
# WhiteLabel MVP - Produção
# ========================================

# IMPORTANTE: 
# 1. Copie este arquivo para .env
# 2. Substitua TODOS os valores CHANGE_THIS_*
# 3. Use o script generate-secrets.sh para gerar senhas seguras
# 4. NUNCA commite o arquivo .env real no Git

# ========================================
# CONFIGURAÇÕES DO BANCO DE DADOS
# ========================================

# URL completa de conexão PostgreSQL
DATABASE_URL=postgresql://postgres:CHANGE_THIS_DB_PASSWORD@postgres:5432/whitelabel_mvp

# Senha do usuário postgres (deve ser a mesma da DATABASE_URL)
POSTGRES_PASSWORD=CHANGE_THIS_DB_PASSWORD

# ========================================
# CONFIGURAÇÕES JWT (AUTENTICAÇÃO)
# ========================================

# Chave secreta para assinar tokens JWT (mínimo 32 caracteres)
JWT_SECRET=CHANGE_THIS_TO_A_SUPER_SECRET_KEY_MINIMUM_32_CHARACTERS

# Tempo de expiração dos tokens
JWT_EXPIRES_IN=7d

# ========================================
# CONFIGURAÇÕES DO SERVIDOR
# ========================================

# Ambiente de execução
NODE_ENV=production

# Porta do backend (padrão: 4000)
PORT=4000

# ========================================
# EVOLUTION API (WHATSAPP)
# ========================================

# URL interna da Evolution API (Docker)
EVOLUTION_API_URL=http://evolution-api:8080

# Chave de API da Evolution (32 caracteres hexadecimais)
EVOLUTION_API_KEY=CHANGE_THIS_EVOLUTION_API_KEY

# URL externa para webhooks (seu domínio)
EVOLUTION_FRONTEND_URL=https://CHANGE_YOUR_DOMAIN.com:8080

# ========================================
# CONFIGURAÇÕES REDIS
# ========================================

# URL de conexão Redis (Docker)
REDIS_URL=redis://redis:6379

# ========================================
# URLs DO SISTEMA
# ========================================

# URL do frontend (seu domínio)
FRONTEND_URL=https://CHANGE_YOUR_DOMAIN.com

# URL da API backend (seu domínio)
BACKEND_URL=https://CHANGE_YOUR_DOMAIN.com/api

# ========================================
# RATE LIMITING
# ========================================

# Janela de tempo para rate limiting (ms)
RATE_LIMIT_WINDOW_MS=900000

# Máximo de requests por janela
RATE_LIMIT_MAX_REQUESTS=100

# ========================================
# UPLOAD DE ARQUIVOS
# ========================================

# Tamanho máximo de arquivo (bytes) - 10MB padrão
MAX_FILE_SIZE=10485760

# Diretório para uploads
UPLOAD_DIR=uploads

# ========================================
# CONFIGURAÇÕES DE EMAIL (OPCIONAL)
# ========================================

# Servidor SMTP
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_SECURE=false

# Credenciais SMTP
SMTP_USER=your-email@gmail.com
SMTP_PASS=your-app-password

# Email remetente
SMTP_FROM=noreply@CHANGE_YOUR_DOMAIN.com

# ========================================
# AWS S3 (OPCIONAL)
# ========================================

# Credenciais AWS
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_REGION=us-east-1

# Bucket S3
AWS_S3_BUCKET=your-bucket-name

# ========================================
# CONFIGURAÇÕES DE LOG
# ========================================

# Nível de log (error, warn, info, debug)
LOG_LEVEL=info

# Arquivo de log
LOG_FILE=logs/app.log

# ========================================
# SSL/HTTPS (CONFIGURADO AUTOMATICAMENTE)
# ========================================

# Paths dos certificados SSL (Let's Encrypt)
SSL_CERT_PATH=/etc/letsencrypt/live/CHANGE_YOUR_DOMAIN.com/fullchain.pem
SSL_KEY_PATH=/etc/letsencrypt/live/CHANGE_YOUR_DOMAIN.com/privkey.pem

# ========================================
# CONFIGURAÇÕES AVANÇADAS (OPCIONAL)
# ========================================

# Pool de conexões do banco
DB_POOL_MIN=2
DB_POOL_MAX=10

# Timeout para requests (ms)
REQUEST_TIMEOUT=30000

# Modo debug (true/false)
DEBUG_MODE=false

# Webhook timeout (ms)
WEBHOOK_TIMEOUT=30000

# Session secret
SESSION_SECRET=CHANGE_THIS_SESSION_SECRET_32_CHARS

# ========================================
# MONITORAMENTO (OPCIONAL)
# ========================================

# Telegram para alertas
TELEGRAM_BOT_TOKEN=your-telegram-bot-token
TELEGRAM_CHAT_ID=your-telegram-chat-id

# Webhook para alertas
ALERT_WEBHOOK_URL=https://hooks.slack.com/your-webhook

# ========================================
# INSTRUÇÕES PARA CONFIGURAÇÃO
# ========================================

# 1. DOMÍNIO:
#    - Substitua CHANGE_YOUR_DOMAIN.com pelo seu domínio real
#    - Configure DNS A record apontando para IP da EC2
#    - Exemplo: whitelabel.minhaempresa.com

# 2. SENHAS SEGURAS:
#    Execute: ./scripts/generate-secrets.sh
#    Ou gere manualmente:
#    - JWT_SECRET: openssl rand -hex 32
#    - POSTGRES_PASSWORD: openssl rand -base64 25 | tr -d "=+/"
#    - EVOLUTION_API_KEY: openssl rand -hex 16

# 3. EMAIL (OPCIONAL):
#    - Gmail: Use senha de app, não senha normal
#    - Outlook: Configure SMTP_HOST=smtp-mail.outlook.com
#    - Outros: Consulte documentação do provedor

# 4. AWS S3 (OPCIONAL):
#    - Crie bucket no S3
#    - Crie usuário IAM com permissões S3
#    - Configure credenciais

# 5. MONITORAMENTO (OPCIONAL):
#    - Crie bot no Telegram para alertas
#    - Configure webhook do Slack se necessário

# ========================================
# VERIFICAÇÃO DE SEGURANÇA
# ========================================

# ✅ Checklist de segurança:
# [ ] JWT_SECRET tem pelo menos 32 caracteres
# [ ] POSTGRES_PASSWORD é forte e único
# [ ] EVOLUTION_API_KEY foi alterado
# [ ] Domínio está correto em todas as URLs
# [ ] Arquivo .env tem permissões 600
# [ ] Senhas não estão no Git

# Para verificar permissões: ls -la .env
# Para corrigir permissões: chmod 600 .env